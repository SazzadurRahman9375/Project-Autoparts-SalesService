// <auto-generated />
using System;
using APSS.Lib.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APSS.Api.Migrations
{
    [DbContext(typeof(AutoPartsDbContext))]
    partial class AutoPartsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APSS.Lib.Models.CommonDetail", b =>
                {
                    b.Property<int>("CommonDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommonDetailId"));

                    b.Property<string>("DetailName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("CommonDetailId");

                    b.ToTable("CommonDetails");
                });

            modelBuilder.Entity("APSS.Lib.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerName = "md ashunm",
                            Email = "fgahsdi@gmail.com",
                            Phone = "015xxxxxxxxx"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerName = "md gfsd",
                            Email = "dfdfsf@gmail.com",
                            Phone = "018xxxxxxxxx"
                        },
                        new
                        {
                            CustomerId = 3,
                            CustomerName = "md asfag",
                            Email = "rtertet@gmail.com",
                            Phone = "017xxxxxxxxx"
                        },
                        new
                        {
                            CustomerId = 4,
                            CustomerName = "md tander",
                            Email = "vfgdfhh@gmail.com",
                            Phone = "014xxxxxxxxx"
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<string>("InventoryCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("RetailPrice")
                        .HasColumnType("money");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money");

                    b.HasKey("InventoryId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            InventoryCode = "BOW101W",
                            ProductId = 1,
                            Quantity = 12,
                            RetailPrice = 1200.00m,
                            SupplierId = 1,
                            UnitPrice = 1000.00m
                        },
                        new
                        {
                            InventoryId = 2,
                            InventoryCode = "HFG0113",
                            ProductId = 2,
                            Quantity = 17,
                            RetailPrice = 1800.00m,
                            SupplierId = 2,
                            UnitPrice = 1600.00m
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 2,
                            OrderDate = new DateTime(2024, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 3,
                            OrderDate = new DateTime(2024, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 2,
                            OrderDate = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailId = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            OrderDetailId = 2,
                            OrderId = 2,
                            ProductId = 2,
                            Quantity = 15
                        },
                        new
                        {
                            OrderDetailId = 3,
                            OrderId = 3,
                            ProductId = 1,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.Part", b =>
                {
                    b.Property<int>("PartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartId"));

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("ServiceDetailEntryId")
                        .HasColumnType("int");

                    b.HasKey("PartId");

                    b.HasIndex("ServiceDetailEntryId");

                    b.ToTable("Parts");

                    b.HasData(
                        new
                        {
                            PartId = 1,
                            PartName = "Washing Powder",
                            Price = 130.00m,
                            ServiceDetailEntryId = 1
                        },
                        new
                        {
                            PartId = 2,
                            PartName = "Fuel Filter",
                            Price = 130.00m,
                            ServiceDetailEntryId = 2
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Price = 1200.00m,
                            ProductCategoryId = 1,
                            ProductName = "Brake pad",
                            ShortDescription = "Smooth Brakes"
                        },
                        new
                        {
                            ProductId = 2,
                            Price = 1800.00m,
                            ProductCategoryId = 2,
                            ProductName = "Sports Helmet",
                            ShortDescription = "High quality material"
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCategoryId"));

                    b.Property<string>("ProductCategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategoryId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductCategoryId = 1,
                            ProductCategoryName = "Brakes",
                            VehicleTypeId = 1
                        },
                        new
                        {
                            ProductCategoryId = 2,
                            ProductCategoryName = "Engine Parts",
                            VehicleTypeId = 1
                        },
                        new
                        {
                            ProductCategoryId = 3,
                            ProductCategoryName = "Suspension and Streering",
                            VehicleTypeId = 1
                        },
                        new
                        {
                            ProductCategoryId = 4,
                            ProductCategoryName = "Helmet",
                            VehicleTypeId = 2
                        },
                        new
                        {
                            ProductCategoryId = 5,
                            ProductCategoryName = "Handlebars",
                            VehicleTypeId = 2
                        },
                        new
                        {
                            ProductCategoryId = 6,
                            ProductCategoryName = "Body Frame",
                            VehicleTypeId = 2
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.ProductDetail", b =>
                {
                    b.Property<int>("ProductDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductDetailId"));

                    b.Property<string>("Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductDetailId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            ProductDetailId = 1,
                            Label = "Manufacturer",
                            ProductId = 1,
                            Value = "Japan"
                        },
                        new
                        {
                            ProductDetailId = 2,
                            Label = "Weight",
                            ProductId = 2,
                            Value = "500gm"
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.ProductPicture", b =>
                {
                    b.Property<int>("ProductPictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductPictureId"));

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductPictureId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPictures");

                    b.HasData(
                        new
                        {
                            ProductPictureId = 1,
                            Picture = "1.jpeg",
                            ProductId = 1
                        },
                        new
                        {
                            ProductPictureId = 2,
                            Picture = "2.jpeg",
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceDetail", b =>
                {
                    b.Property<int>("ServiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceDetailId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<DateTime>("ProposedServiceDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("date");

                    b.Property<int>("ServiceRequestId")
                        .HasColumnType("int");

                    b.HasKey("ServiceDetailId");

                    b.HasIndex("ServiceRequestId");

                    b.ToTable("ServiceDetails");

                    b.HasData(
                        new
                        {
                            ServiceDetailId = 1,
                            Description = "Car should be washed properly both inner side and outer side.",
                            ProposedServiceDate = new DateTime(2024, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceRequestId = 1
                        },
                        new
                        {
                            ServiceDetailId = 2,
                            Description = "Fuel filter should be Japanese branded",
                            ProposedServiceDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestDate = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceRequestId = 2
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceDetailEntry", b =>
                {
                    b.Property<int>("ServiceDetailEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceDetailEntryId"));

                    b.Property<decimal>("ServiceCost")
                        .HasColumnType("money");

                    b.Property<int>("ServiceDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceRequestId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceStatusId")
                        .HasColumnType("int");

                    b.HasKey("ServiceDetailEntryId");

                    b.HasIndex("ServiceDetailId");

                    b.HasIndex("ServiceRequestId");

                    b.HasIndex("ServiceStatusId");

                    b.ToTable("ServiceDetailEntries");

                    b.HasData(
                        new
                        {
                            ServiceDetailEntryId = 1,
                            ServiceCost = 1000.00m,
                            ServiceDetailId = 1,
                            ServiceStatusId = 1
                        },
                        new
                        {
                            ServiceDetailEntryId = 2,
                            ServiceCost = 100.00m,
                            ServiceDetailId = 2,
                            ServiceStatusId = 1
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.ServicePayment", b =>
                {
                    b.Property<int>("ServicePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicePaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<string>("PaymentThrough")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ServiceDetailEntryId")
                        .HasColumnType("int");

                    b.HasKey("ServicePaymentId");

                    b.HasIndex("ServiceDetailEntryId");

                    b.ToTable("ServicePayments");
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceRequest", b =>
                {
                    b.Property<int>("ServiceRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceRequestId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("int");

                    b.HasKey("ServiceRequestId");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("ServiceRequests");

                    b.HasData(
                        new
                        {
                            ServiceRequestId = 1,
                            CustomerName = "Murad",
                            Email = "fsrgs@gmail.com",
                            Phone = "0175xxxxxxxx",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            ServiceRequestId = 2,
                            CustomerName = "Aslam",
                            Email = "hgfhisd@gmail.com",
                            Phone = "0129xxxxxxxx",
                            ServiceTypeId = 2
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceStatus", b =>
                {
                    b.Property<int>("ServiceStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceStatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ServiceStatusId");

                    b.ToTable("ServiceStatus");

                    b.HasData(
                        new
                        {
                            ServiceStatusId = 1,
                            StatusName = "New"
                        },
                        new
                        {
                            ServiceStatusId = 2,
                            StatusName = "Assigned"
                        },
                        new
                        {
                            ServiceStatusId = 3,
                            StatusName = "In Progress"
                        },
                        new
                        {
                            ServiceStatusId = 4,
                            StatusName = "Pending"
                        },
                        new
                        {
                            ServiceStatusId = 5,
                            StatusName = "Resolved"
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceType", b =>
                {
                    b.Property<int>("ServiceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceTypeId"));

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("ServiceTypeId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("ServiceTypes");

                    b.HasData(
                        new
                        {
                            ServiceTypeId = 1,
                            ServiceName = "Car Wash",
                            VehicleTypeId = 1
                        },
                        new
                        {
                            ServiceTypeId = 2,
                            ServiceName = "Filter Change",
                            VehicleTypeId = 2
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.StockEntry", b =>
                {
                    b.Property<int>("StockEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockEntryId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TotalIn")
                        .HasColumnType("int");

                    b.Property<int>("TotalSold")
                        .HasColumnType("int");

                    b.HasKey("StockEntryId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("StockEntries");

                    b.HasData(
                        new
                        {
                            StockEntryId = 1,
                            ProductId = 1,
                            TotalIn = 9,
                            TotalSold = 8
                        },
                        new
                        {
                            StockEntryId = 2,
                            ProductId = 2,
                            TotalIn = 15,
                            TotalSold = 15
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("SupplierId");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            CompanyName = "M/s Hajee Automobiles",
                            ContactName = "Md. Rafique Hajee",
                            ContactNo = "012xxxxxxxx"
                        },
                        new
                        {
                            SupplierId = 2,
                            CompanyName = "M/s Babul Enterprise",
                            ContactName = "Md. Tauhid",
                            ContactNo = "013xxxxxxxx"
                        },
                        new
                        {
                            SupplierId = 3,
                            CompanyName = "M/s Talukder Automobiles",
                            ContactName = "Md. Tanveer",
                            ContactNo = "019xxxxxxxx"
                        },
                        new
                        {
                            SupplierId = 4,
                            CompanyName = "M/s Hossain Automobiles",
                            ContactName = "Md. Asad Ullaaah",
                            ContactNo = "018xxxxxxxx"
                        },
                        new
                        {
                            SupplierId = 5,
                            CompanyName = "M/s Aslam Enterprise",
                            ContactName = "Md. Shakil",
                            ContactNo = "012xxxxxxxx"
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.VehicleType", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleTypeId"));

                    b.Property<string>("VehicleTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VehicleTypeId");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            VehicleTypeId = 1,
                            VehicleTypeName = "Car"
                        },
                        new
                        {
                            VehicleTypeId = 2,
                            VehicleTypeName = "Bike"
                        });
                });

            modelBuilder.Entity("APSS.Lib.Models.Inventory", b =>
                {
                    b.HasOne("APSS.Lib.Models.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APSS.Lib.Models.Supplier", "Supplier")
                        .WithMany("Inventories")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("APSS.Lib.Models.Order", b =>
                {
                    b.HasOne("APSS.Lib.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("APSS.Lib.Models.OrderDetail", b =>
                {
                    b.HasOne("APSS.Lib.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APSS.Lib.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("APSS.Lib.Models.Part", b =>
                {
                    b.HasOne("APSS.Lib.Models.ServiceDetailEntry", "ServiceDetailEntry")
                        .WithMany("Parts")
                        .HasForeignKey("ServiceDetailEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceDetailEntry");
                });

            modelBuilder.Entity("APSS.Lib.Models.Product", b =>
                {
                    b.HasOne("APSS.Lib.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("APSS.Lib.Models.ProductCategory", b =>
                {
                    b.HasOne("APSS.Lib.Models.VehicleType", "VehicleType")
                        .WithMany("ProductCategories")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("APSS.Lib.Models.ProductDetail", b =>
                {
                    b.HasOne("APSS.Lib.Models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("APSS.Lib.Models.ProductPicture", b =>
                {
                    b.HasOne("APSS.Lib.Models.Product", "Product")
                        .WithMany("ProductPictures")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceDetail", b =>
                {
                    b.HasOne("APSS.Lib.Models.ServiceRequest", "ServiceRequest")
                        .WithMany("ServiceDetails")
                        .HasForeignKey("ServiceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceRequest");
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceDetailEntry", b =>
                {
                    b.HasOne("APSS.Lib.Models.ServiceDetail", "ServiceDetail")
                        .WithMany("ServiceDetailEntries")
                        .HasForeignKey("ServiceDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APSS.Lib.Models.ServiceRequest", null)
                        .WithMany("ServiceDetailEntries")
                        .HasForeignKey("ServiceRequestId");

                    b.HasOne("APSS.Lib.Models.ServiceStatus", "ServiceStatus")
                        .WithMany("ServiceDetailEntries")
                        .HasForeignKey("ServiceStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceDetail");

                    b.Navigation("ServiceStatus");
                });

            modelBuilder.Entity("APSS.Lib.Models.ServicePayment", b =>
                {
                    b.HasOne("APSS.Lib.Models.ServiceDetailEntry", "ServiceDetailEntry")
                        .WithMany("ServicePayments")
                        .HasForeignKey("ServiceDetailEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceDetailEntry");
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceRequest", b =>
                {
                    b.HasOne("APSS.Lib.Models.ServiceType", "ServiceType")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceType", b =>
                {
                    b.HasOne("APSS.Lib.Models.VehicleType", "VehicleType")
                        .WithMany("ServiceTypes")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("APSS.Lib.Models.StockEntry", b =>
                {
                    b.HasOne("APSS.Lib.Models.Product", "Product")
                        .WithOne("StockEntry")
                        .HasForeignKey("APSS.Lib.Models.StockEntry", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("APSS.Lib.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("APSS.Lib.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("APSS.Lib.Models.Product", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("ProductDetails");

                    b.Navigation("ProductPictures");

                    b.Navigation("StockEntry");
                });

            modelBuilder.Entity("APSS.Lib.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceDetail", b =>
                {
                    b.Navigation("ServiceDetailEntries");
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceDetailEntry", b =>
                {
                    b.Navigation("Parts");

                    b.Navigation("ServicePayments");
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceRequest", b =>
                {
                    b.Navigation("ServiceDetailEntries");

                    b.Navigation("ServiceDetails");
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceStatus", b =>
                {
                    b.Navigation("ServiceDetailEntries");
                });

            modelBuilder.Entity("APSS.Lib.Models.ServiceType", b =>
                {
                    b.Navigation("ServiceRequests");
                });

            modelBuilder.Entity("APSS.Lib.Models.Supplier", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("APSS.Lib.Models.VehicleType", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ServiceTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
